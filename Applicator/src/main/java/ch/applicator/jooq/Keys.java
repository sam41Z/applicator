/*
 * This file is generated by jOOQ.
 */
package ch.applicator.jooq;


import ch.applicator.jooq.tables.Application;
import ch.applicator.jooq.tables.Employer;
import ch.applicator.jooq.tables.Job;
import ch.applicator.jooq.tables.records.ApplicationRecord;
import ch.applicator.jooq.tables.records.EmployerRecord;
import ch.applicator.jooq.tables.records.JobRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ApplicationRecord> APPLICATION_JOB_KEY = Internal.createUniqueKey(Application.APPLICATION, DSL.name("application_job_key"), new TableField[] { Application.APPLICATION.JOB }, true);
    public static final UniqueKey<ApplicationRecord> APPLICATION_PKEY = Internal.createUniqueKey(Application.APPLICATION, DSL.name("application_pkey"), new TableField[] { Application.APPLICATION.ID }, true);
    public static final UniqueKey<EmployerRecord> EMPLOYER_PKEY = Internal.createUniqueKey(Employer.EMPLOYER, DSL.name("employer_pkey"), new TableField[] { Employer.EMPLOYER.ID }, true);
    public static final UniqueKey<JobRecord> JOB_PKEY = Internal.createUniqueKey(Job.JOB, DSL.name("job_pkey"), new TableField[] { Job.JOB.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ApplicationRecord, JobRecord> APPLICATION__APPLICATION_JOB_FKEY = Internal.createForeignKey(Application.APPLICATION, DSL.name("application_job_fkey"), new TableField[] { Application.APPLICATION.JOB }, Keys.JOB_PKEY, new TableField[] { Job.JOB.ID }, true);
    public static final ForeignKey<JobRecord, EmployerRecord> JOB__JOB_EMPLOYER_FKEY = Internal.createForeignKey(Job.JOB, DSL.name("job_employer_fkey"), new TableField[] { Job.JOB.EMPLOYER }, Keys.EMPLOYER_PKEY, new TableField[] { Employer.EMPLOYER.ID }, true);
}
