/*
 * This file is generated by jOOQ.
 */
package ch.applicator.jooq.tables.records;


import ch.applicator.jooq.tables.Job;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobRecord extends UpdatableRecordImpl<JobRecord> implements Record5<UUID, UUID, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.job.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.job.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.job.employer</code>.
     */
    public void setEmployer(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.job.employer</code>.
     */
    public UUID getEmployer() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.job.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.job.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.job.position</code>.
     */
    public void setPosition(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.job.position</code>.
     */
    public String getPosition() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.job.original_url</code>.
     */
    public void setOriginalUrl(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.job.original_url</code>.
     */
    public String getOriginalUrl() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, UUID, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Job.JOB.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Job.JOB.EMPLOYER;
    }

    @Override
    public Field<String> field3() {
        return Job.JOB.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return Job.JOB.POSITION;
    }

    @Override
    public Field<String> field5() {
        return Job.JOB.ORIGINAL_URL;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getEmployer();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getPosition();
    }

    @Override
    public String component5() {
        return getOriginalUrl();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getEmployer();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getPosition();
    }

    @Override
    public String value5() {
        return getOriginalUrl();
    }

    @Override
    public JobRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public JobRecord value2(UUID value) {
        setEmployer(value);
        return this;
    }

    @Override
    public JobRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public JobRecord value4(String value) {
        setPosition(value);
        return this;
    }

    @Override
    public JobRecord value5(String value) {
        setOriginalUrl(value);
        return this;
    }

    @Override
    public JobRecord values(UUID value1, UUID value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JobRecord
     */
    public JobRecord() {
        super(Job.JOB);
    }

    /**
     * Create a detached, initialised JobRecord
     */
    public JobRecord(UUID id, UUID employer, String description, String position, String originalUrl) {
        super(Job.JOB);

        setId(id);
        setEmployer(employer);
        setDescription(description);
        setPosition(position);
        setOriginalUrl(originalUrl);
        resetChangedOnNotNull();
    }
}
